const GEMINI_API_KEY = import.meta.env.VITE_GEMINI_API_KEY;
const GEMINI_API_URL = import.meta.env.VITE_GEMINI_API_URL;

/**
 * Generates a trip plan using the Gemini AI API.
 * @param {Object} preferences - The user preferences for the trip.
 * @returns {Object} - The trip details generated by the API.
 */
export async function generateTrip(preferences) {
  console.log("Generating trip with preferences:", preferences);
  console.log("Using API URL:", GEMINI_API_URL);

  try {
    const response = await fetch(GEMINI_API_URL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${GEMINI_API_KEY}`,
      },
      body: JSON.stringify({
        destination: preferences.destination,
        duration: preferences.days,
        budget: preferences.budget,
        travelers: preferences.companions,
      }),
    });

    // Check if the response status is OK (status code 200-299)
    if (!response.ok) {
      const errorText = await response.text();
      console.error("Error response from API:", errorText);
      throw new Error(errorText || "Failed to generate trip.");
    }

    // Log the raw response text for debugging
    const contentType = response.headers.get("content-type");
    if (contentType && contentType.includes("application/json")) {
      const result = await response.json();
      console.log("Response JSON:", result);
      return result; // Return the trip details
    } else {
      const responseText = await response.text();
      console.log("Response Text:", responseText);
      throw new Error("Unexpected response format");
    }

  } catch (error) {
    console.error("Error generating trip:", error.message);
    throw error;
  }
}

/**
 * Saves the generated trip to local storage for later access.
 * @param {Object} tripDetails - The trip details to save.
 */
export function saveTripToLocal(tripDetails) {
  let trips = JSON.parse(localStorage.getItem("savedTrips")) || [];
  trips.push(tripDetails);
  localStorage.setItem("savedTrips", JSON.stringify(trips));
}

/**
 * Retrieves the saved trips from local storage.
 * @returns {Array} - The list of saved trip details.
 */
export function getSavedTrips() {
  return JSON.parse(localStorage.getItem("savedTrips")) || [];
}